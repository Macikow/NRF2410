
NRF2410.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000170  00800200  00000a10  00000aa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800370  00800370  00000c14  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c14  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000180  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014e8  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000711  00000000  00000000  000022d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000acf  00000000  00000000  000029e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004e4  00000000  00000000  000034b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c0  00000000  00000000  0000399c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f71  00000000  00000000  00003e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000140  00000000  00000000  00004dcd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	7f c0       	rjmp	.+254    	; 0x164 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	13 e0       	ldi	r17, 0x03	; 3
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e1       	ldi	r30, 0x10	; 16
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 37       	cpi	r26, 0x70	; 112
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	23 e0       	ldi	r18, 0x03	; 3
 110:	a0 e7       	ldi	r26, 0x70	; 112
 112:	b3 e0       	ldi	r27, 0x03	; 3
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 37       	cpi	r26, 0x78	; 120
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	88 d0       	rcall	.+272    	; 0x230 <main>
 120:	75 c4       	rjmp	.+2282   	; 0xa0c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <USART_init>:
#define BACKSPACE 127
#define COMPARE_CHAR_COUNT 5

void USART_init(void){
	
	UBRR0L = (unsigned char) 103;
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	80 93 c4 00 	sts	0x00C4, r24
	UBRR0H = (unsigned char) 0x00;
 12a:	10 92 c5 00 	sts	0x00C5, r1
	UCSR0B = ((1<<TXEN0) | (1<<RXEN0) | (1<<RXCIE0));
 12e:	88 e9       	ldi	r24, 0x98	; 152
 130:	80 93 c1 00 	sts	0x00C1, r24
	printf("%s%sRozpoczêcie porgramu ver1\n",ERASE_SCREEN,CURSOR_HOME);
 134:	8e e0       	ldi	r24, 0x0E	; 14
 136:	92 e0       	ldi	r25, 0x02	; 2
 138:	9f 93       	push	r25
 13a:	8f 93       	push	r24
 13c:	85 e1       	ldi	r24, 0x15	; 21
 13e:	92 e0       	ldi	r25, 0x02	; 2
 140:	9f 93       	push	r25
 142:	8f 93       	push	r24
 144:	8a e1       	ldi	r24, 0x1A	; 26
 146:	92 e0       	ldi	r25, 0x02	; 2
 148:	9f 93       	push	r25
 14a:	8f 93       	push	r24
 14c:	88 d1       	rcall	.+784    	; 0x45e <printf>
#if DEBUG == 1
	printf("inicjalizacja USART - OK \n");
 14e:	89 e3       	ldi	r24, 0x39	; 57
 150:	92 e0       	ldi	r25, 0x02	; 2
 152:	9b d1       	rcall	.+822    	; 0x48a <puts>
#endif
	sei();
 154:	78 94       	sei
 156:	0f 90       	pop	r0
 158:	0f 90       	pop	r0
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	08 95       	ret

00000164 <__vector_25>:
}


ISR(USART0_RX_vect){
 164:	1f 92       	push	r1
 166:	0f 92       	push	r0
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	0f 92       	push	r0
 16c:	11 24       	eor	r1, r1
 16e:	0b b6       	in	r0, 0x3b	; 59
 170:	0f 92       	push	r0
 172:	2f 93       	push	r18
 174:	3f 93       	push	r19
 176:	4f 93       	push	r20
 178:	5f 93       	push	r21
 17a:	6f 93       	push	r22
 17c:	7f 93       	push	r23
 17e:	8f 93       	push	r24
 180:	9f 93       	push	r25
 182:	af 93       	push	r26
 184:	bf 93       	push	r27
 186:	ef 93       	push	r30
 188:	ff 93       	push	r31
	cli();
 18a:	f8 94       	cli
	static unsigned char i;
	char buffer[50];
	char data = UDR0;
 18c:	80 91 c6 00 	lds	r24, 0x00C6
	if(i<45){
 190:	90 91 70 03 	lds	r25, 0x0370
 194:	9d 32       	cpi	r25, 0x2D	; 45
 196:	f0 f4       	brcc	.+60     	; 0x1d4 <__vector_25+0x70>
		if(data == ENTER || data == '\n'){ 
 198:	8d 30       	cpi	r24, 0x0D	; 13
 19a:	11 f0       	breq	.+4      	; 0x1a0 <__vector_25+0x3c>
 19c:	8a 30       	cpi	r24, 0x0A	; 10
 19e:	31 f4       	brne	.+12     	; 0x1ac <__vector_25+0x48>
			buffer[i] = '\0';
			printf("\n");
 1a0:	8a e0       	ldi	r24, 0x0A	; 10
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	6d d1       	rcall	.+730    	; 0x480 <putchar>
			i=0;
 1a6:	10 92 70 03 	sts	0x0370, r1
 1aa:	1d c0       	rjmp	.+58     	; 0x1e6 <__vector_25+0x82>
		}
		else if(data==BACKSPACE){
 1ac:	8f 37       	cpi	r24, 0x7F	; 127
 1ae:	51 f4       	brne	.+20     	; 0x1c4 <__vector_25+0x60>
			UDR0= data;
 1b0:	80 93 c6 00 	sts	0x00C6, r24
			if(i>0){
 1b4:	80 91 70 03 	lds	r24, 0x0370
 1b8:	88 23       	and	r24, r24
 1ba:	a9 f0       	breq	.+42     	; 0x1e6 <__vector_25+0x82>
				i--;
 1bc:	81 50       	subi	r24, 0x01	; 1
 1be:	80 93 70 03 	sts	0x0370, r24
 1c2:	11 c0       	rjmp	.+34     	; 0x1e6 <__vector_25+0x82>
			else i=0;
			buffer[i] = '\0';
		}
		else{
			buffer[i] = data;
			UDR0 = data;
 1c4:	80 93 c6 00 	sts	0x00C6, r24
			i++;
 1c8:	80 91 70 03 	lds	r24, 0x0370
 1cc:	8f 5f       	subi	r24, 0xFF	; 255
 1ce:	80 93 70 03 	sts	0x0370, r24
 1d2:	09 c0       	rjmp	.+18     	; 0x1e6 <__vector_25+0x82>
		}
	}
	else{
		printf("przekroczono max ilosc znakow /n/r");
 1d4:	83 e5       	ldi	r24, 0x53	; 83
 1d6:	92 e0       	ldi	r25, 0x02	; 2
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	40 d1       	rcall	.+640    	; 0x45e <printf>
		i=0;
 1de:	10 92 70 03 	sts	0x0370, r1
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
	}
	sei();
 1e6:	78 94       	sei
 1e8:	ff 91       	pop	r31
 1ea:	ef 91       	pop	r30
 1ec:	bf 91       	pop	r27
 1ee:	af 91       	pop	r26
 1f0:	9f 91       	pop	r25
 1f2:	8f 91       	pop	r24
 1f4:	7f 91       	pop	r23
 1f6:	6f 91       	pop	r22
 1f8:	5f 91       	pop	r21
 1fa:	4f 91       	pop	r20
 1fc:	3f 91       	pop	r19
 1fe:	2f 91       	pop	r18
 200:	0f 90       	pop	r0
 202:	0b be       	out	0x3b, r0	; 59
 204:	0f 90       	pop	r0
 206:	0f be       	out	0x3f, r0	; 63
 208:	0f 90       	pop	r0
 20a:	1f 90       	pop	r1
 20c:	18 95       	reti

0000020e <uart_putchar>:
#define LED_TOGGLE (PORTB ^= (1<<7))

static int uart_putchar(char c, FILE *stream);
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL,_FDEV_SETUP_WRITE);
static int uart_putchar(char c, FILE *stream)
{if (c == '\n')
 20e:	cf 93       	push	r28
 210:	c8 2f       	mov	r28, r24
 212:	8a 30       	cpi	r24, 0x0A	; 10
 214:	11 f4       	brne	.+4      	; 0x21a <uart_putchar+0xc>
	uart_putchar('\r', stream);
 216:	8d e0       	ldi	r24, 0x0D	; 13
 218:	fa df       	rcall	.-12     	; 0x20e <uart_putchar>
	loop_until_bit_is_set(UCSR0A, UDRE0);
 21a:	e0 ec       	ldi	r30, 0xC0	; 192
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	90 81       	ld	r25, Z
 220:	95 ff       	sbrs	r25, 5
 222:	fd cf       	rjmp	.-6      	; 0x21e <uart_putchar+0x10>
	UDR0 = c;
 224:	c0 93 c6 00 	sts	0x00C6, r28
	return 0;
	
}
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <main>:

int main(void){
	stdout = &mystdout;
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	92 e0       	ldi	r25, 0x02	; 2
 234:	90 93 75 03 	sts	0x0375, r25
 238:	80 93 74 03 	sts	0x0374, r24
	 LED_INIT;
 23c:	27 9a       	sbi	0x04, 7	; 4
	
	USART_init();
 23e:	72 df       	rcall	.-284    	; 0x124 <USART_init>
	printf("rozpoczêcie programu...\n");
 240:	86 e7       	ldi	r24, 0x76	; 118
 242:	92 e0       	ldi	r25, 0x02	; 2
 244:	22 d1       	rcall	.+580    	; 0x48a <puts>
	printf("PRR0 : %x\n",PRR0);
 246:	80 91 64 00 	lds	r24, 0x0064
 24a:	1f 92       	push	r1
 24c:	8f 93       	push	r24
 24e:	8e e8       	ldi	r24, 0x8E	; 142
 250:	92 e0       	ldi	r25, 0x02	; 2
 252:	9f 93       	push	r25
 254:	8f 93       	push	r24
 256:	03 d1       	rcall	.+518    	; 0x45e <printf>
	nrf24_init();
 258:	3f d0       	rcall	.+126    	; 0x2d8 <nrf24_init>
	nrf24_config(1,2);
 25a:	62 e0       	ldi	r22, 0x02	; 2
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	84 d0       	rcall	.+264    	; 0x36c <nrf24_config>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 264:	8f e3       	ldi	r24, 0x3F	; 63
 266:	9c e9       	ldi	r25, 0x9C	; 156
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	f1 f7       	brne	.-4      	; 0x268 <main+0x38>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0x3e>
 26e:	00 00       	nop
	_delay_ms(10);
	nrf24_writeSingleRegister(0x00, 0xff);
 270:	6f ef       	ldi	r22, 0xFF	; 255
 272:	70 e0       	ldi	r23, 0x00	; 0
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	5a d0       	rcall	.+180    	; 0x32e <nrf24_writeSingleRegister>
	nrf24_writeSingleRegister(0x01, 0xe5);
 27a:	65 ee       	ldi	r22, 0xE5	; 229
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	55 d0       	rcall	.+170    	; 0x32e <nrf24_writeSingleRegister>
	//nrf24_config(1,3);
	nrf24_readSingleRegister(0x01);
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	63 d0       	rcall	.+198    	; 0x350 <nrf24_readSingleRegister>
	nrf24_readSingleRegister(0x00);
 28a:	80 e0       	ldi	r24, 0x00	; 0
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	60 d0       	rcall	.+192    	; 0x350 <nrf24_readSingleRegister>
 290:	0f 90       	pop	r0
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
	
	while(1)
	{
		 LED_TOGGLE;
 298:	85 b1       	in	r24, 0x05	; 5
 29a:	80 58       	subi	r24, 0x80	; 128
 29c:	85 b9       	out	0x05, r24	; 5
 29e:	9f ef       	ldi	r25, 0xFF	; 255
 2a0:	29 e6       	ldi	r18, 0x69	; 105
 2a2:	88 e1       	ldi	r24, 0x18	; 24
 2a4:	91 50       	subi	r25, 0x01	; 1
 2a6:	20 40       	sbci	r18, 0x00	; 0
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <main+0x74>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <main+0x7e>
 2ae:	00 00       	nop
 2b0:	f3 cf       	rjmp	.-26     	; 0x298 <main+0x68>

000002b2 <nrf24_ce_digitalWrite>:
void nrf24_tx_address(unsigned char* adr)
{
	/* RX_ADDR_P0 must be set to the sending addr for auto ack to work. */
	nrf24_writeRegister(RX_ADDR_P0,adr,nrf24_ADDR_LEN);
	nrf24_writeRegister(TX_ADDR,adr,nrf24_ADDR_LEN);
}
 2b2:	88 23       	and	r24, r24
 2b4:	21 f0       	breq	.+8      	; 0x2be <nrf24_ce_digitalWrite+0xc>
 2b6:	81 30       	cpi	r24, 0x01	; 1
 2b8:	19 f4       	brne	.+6      	; 0x2c0 <nrf24_ce_digitalWrite+0xe>
 2ba:	a2 9a       	sbi	0x14, 2	; 20
 2bc:	08 95       	ret
 2be:	a2 98       	cbi	0x14, 2	; 20
 2c0:	08 95       	ret

000002c2 <nrf24_csn_digitalWrite>:
 2c2:	88 23       	and	r24, r24
 2c4:	21 f0       	breq	.+8      	; 0x2ce <nrf24_csn_digitalWrite+0xc>
 2c6:	81 30       	cpi	r24, 0x01	; 1
 2c8:	19 f4       	brne	.+6      	; 0x2d0 <nrf24_csn_digitalWrite+0xe>
 2ca:	28 9a       	sbi	0x05, 0	; 5
 2cc:	08 95       	ret
 2ce:	28 98       	cbi	0x05, 0	; 5
 2d0:	08 95       	ret

000002d2 <nrf24_setupPins>:
 2d2:	ab d0       	rcall	.+342    	; 0x42a <spiInit>
 2d4:	98 9a       	sbi	0x13, 0	; 19
 2d6:	08 95       	ret

000002d8 <nrf24_init>:
 2d8:	89 e9       	ldi	r24, 0x99	; 153
 2da:	92 e0       	ldi	r25, 0x02	; 2
 2dc:	d6 d0       	rcall	.+428    	; 0x48a <puts>
 2de:	f9 df       	rcall	.-14     	; 0x2d2 <nrf24_setupPins>
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	e7 df       	rcall	.-50     	; 0x2b2 <nrf24_ce_digitalWrite>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	ed cf       	rjmp	.-38     	; 0x2c2 <nrf24_csn_digitalWrite>
 2e8:	08 95       	ret

000002ea <nrf24_configRegister>:
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	d8 2f       	mov	r29, r24
 2f0:	c6 2f       	mov	r28, r22
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	e6 df       	rcall	.-52     	; 0x2c2 <nrf24_csn_digitalWrite>
 2f6:	8d 2f       	mov	r24, r29
 2f8:	8f 71       	andi	r24, 0x1F	; 31
 2fa:	80 62       	ori	r24, 0x20	; 32
 2fc:	aa d0       	rcall	.+340    	; 0x452 <spiTransmit>
 2fe:	8c 2f       	mov	r24, r28
 300:	a8 d0       	rcall	.+336    	; 0x452 <spiTransmit>
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	de df       	rcall	.-68     	; 0x2c2 <nrf24_csn_digitalWrite>
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	08 95       	ret

0000030c <nrf24_powerUpRx>:
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	d9 df       	rcall	.-78     	; 0x2c2 <nrf24_csn_digitalWrite>
 310:	82 ee       	ldi	r24, 0xE2	; 226
 312:	9f d0       	rcall	.+318    	; 0x452 <spiTransmit>
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	d5 df       	rcall	.-86     	; 0x2c2 <nrf24_csn_digitalWrite>
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	cb df       	rcall	.-106    	; 0x2b2 <nrf24_ce_digitalWrite>
 31c:	60 e7       	ldi	r22, 0x70	; 112
 31e:	87 e0       	ldi	r24, 0x07	; 7
 320:	e4 df       	rcall	.-56     	; 0x2ea <nrf24_configRegister>
 322:	6b e0       	ldi	r22, 0x0B	; 11
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	e1 df       	rcall	.-62     	; 0x2ea <nrf24_configRegister>
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	c3 cf       	rjmp	.-122    	; 0x2b2 <nrf24_ce_digitalWrite>
 32c:	08 95       	ret

0000032e <nrf24_writeSingleRegister>:
	nrf24_transmitSync(val,len);
	nrf24_csn_digitalWrite(HIGH);
}

void nrf24_writeSingleRegister(unsigned char reg, unsigned char val)
{
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	d8 2f       	mov	r29, r24
 334:	c6 2f       	mov	r28, r22
	nrf24_csn_digitalWrite(LOW);
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	c4 df       	rcall	.-120    	; 0x2c2 <nrf24_csn_digitalWrite>
	spiTransmit(W_REGISTER | (REGISTER_MASK & reg));
 33a:	8d 2f       	mov	r24, r29
 33c:	8f 71       	andi	r24, 0x1F	; 31
 33e:	80 62       	ori	r24, 0x20	; 32
 340:	88 d0       	rcall	.+272    	; 0x452 <spiTransmit>
	spiTransmit(val);
 342:	8c 2f       	mov	r24, r28
 344:	86 d0       	rcall	.+268    	; 0x452 <spiTransmit>
	nrf24_csn_digitalWrite(HIGH);
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	bc df       	rcall	.-136    	; 0x2c2 <nrf24_csn_digitalWrite>
}
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	08 95       	ret

00000350 <nrf24_readSingleRegister>:

unsigned char nrf24_readSingleRegister(unsigned char reg)
{
 350:	cf 93       	push	r28
 352:	c8 2f       	mov	r28, r24
	nrf24_csn_digitalWrite(LOW);
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	b5 df       	rcall	.-150    	; 0x2c2 <nrf24_csn_digitalWrite>
	spiTransmit(R_REGISTER | (REGISTER_MASK & reg));
 358:	8c 2f       	mov	r24, r28
 35a:	8f 71       	andi	r24, 0x1F	; 31
 35c:	7a d0       	rcall	.+244    	; 0x452 <spiTransmit>
	spiTransmit(NOP);
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	78 d0       	rcall	.+240    	; 0x452 <spiTransmit>
	nrf24_csn_digitalWrite(HIGH);
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	ae df       	rcall	.-164    	; 0x2c2 <nrf24_csn_digitalWrite>
	return SPDR;
 366:	8e b5       	in	r24, 0x2e	; 46
}
 368:	cf 91       	pop	r28
 36a:	08 95       	ret

0000036c <nrf24_config>:
	nrf24_csn_digitalWrite(HIGH);
}

/* configure the module */
void nrf24_config(unsigned char channel, unsigned char pay_length)
{
 36c:	0f 93       	push	r16
 36e:	1f 93       	push	r17
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	c8 2f       	mov	r28, r24
 376:	d6 2f       	mov	r29, r22
	
	unsigned char register_table[29]={15,12};
#if DEBUG
	printf("konfiguracja nrf24l10 : kana³: %d, d³ugoæ strumiena danych = %d bjtów\n",channel,pay_length);
 378:	1f 92       	push	r1
 37a:	6f 93       	push	r22
 37c:	1f 92       	push	r1
 37e:	8f 93       	push	r24
 380:	27 eb       	ldi	r18, 0xB7	; 183
 382:	32 e0       	ldi	r19, 0x02	; 2
 384:	3f 93       	push	r19
 386:	2f 93       	push	r18
 388:	6a d0       	rcall	.+212    	; 0x45e <printf>
#endif
	/* Use static payload length ... */
	payload_len = pay_length;
 38a:	d0 93 71 03 	sts	0x0371, r29

	// Set RF channel
	nrf24_configRegister(RF_CH,channel);
 38e:	6c 2f       	mov	r22, r28
 390:	85 e0       	ldi	r24, 0x05	; 5
 392:	ab df       	rcall	.-170    	; 0x2ea <nrf24_configRegister>

	// Set length of incoming payload
	nrf24_configRegister(RX_PW_P0, 0x00); // Auto-ACK pipe ...
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	81 e1       	ldi	r24, 0x11	; 17
 398:	a8 df       	rcall	.-176    	; 0x2ea <nrf24_configRegister>
	nrf24_configRegister(RX_PW_P1, payload_len); // Data payload pipe
 39a:	60 91 71 03 	lds	r22, 0x0371
 39e:	82 e1       	ldi	r24, 0x12	; 18
 3a0:	a4 df       	rcall	.-184    	; 0x2ea <nrf24_configRegister>
	nrf24_configRegister(RX_PW_P2, 0x00); // Pipe not used
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	83 e1       	ldi	r24, 0x13	; 19
 3a6:	a1 df       	rcall	.-190    	; 0x2ea <nrf24_configRegister>
	nrf24_configRegister(RX_PW_P3, 0x00); // Pipe not used
 3a8:	60 e0       	ldi	r22, 0x00	; 0
 3aa:	84 e1       	ldi	r24, 0x14	; 20
 3ac:	9e df       	rcall	.-196    	; 0x2ea <nrf24_configRegister>
	nrf24_configRegister(RX_PW_P4, 0x00); // Pipe not used
 3ae:	60 e0       	ldi	r22, 0x00	; 0
 3b0:	85 e1       	ldi	r24, 0x15	; 21
 3b2:	9b df       	rcall	.-202    	; 0x2ea <nrf24_configRegister>
	nrf24_configRegister(RX_PW_P5, 0x00); // Pipe not used
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	86 e1       	ldi	r24, 0x16	; 22
 3b8:	98 df       	rcall	.-208    	; 0x2ea <nrf24_configRegister>

	// 1 Mbps, TX gain: 0dbm
	nrf24_configRegister(RF_SETUP, (0<<RF_DR)|((0x03)<<RF_PWR));
 3ba:	66 e0       	ldi	r22, 0x06	; 6
 3bc:	86 e0       	ldi	r24, 0x06	; 6
 3be:	95 df       	rcall	.-214    	; 0x2ea <nrf24_configRegister>

	// CRC enable, 1 byte CRC length
	nrf24_configRegister(CONFIG,nrf24_CONFIG);
 3c0:	68 e0       	ldi	r22, 0x08	; 8
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	92 df       	rcall	.-220    	; 0x2ea <nrf24_configRegister>

	// Auto Acknowledgment
	nrf24_configRegister(EN_AA,(1<<ENAA_P0)|(1<<ENAA_P1)|(0<<ENAA_P2)|(0<<ENAA_P3)|(0<<ENAA_P4)|(0<<ENAA_P5));
 3c6:	63 e0       	ldi	r22, 0x03	; 3
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	8f df       	rcall	.-226    	; 0x2ea <nrf24_configRegister>

	// Enable RX addresses
	nrf24_configRegister(EN_RXADDR,(1<<ERX_P0)|(1<<ERX_P1)|(0<<ERX_P2)|(0<<ERX_P3)|(0<<ERX_P4)|(0<<ERX_P5));
 3cc:	63 e0       	ldi	r22, 0x03	; 3
 3ce:	82 e0       	ldi	r24, 0x02	; 2
 3d0:	8c df       	rcall	.-232    	; 0x2ea <nrf24_configRegister>

	// Auto retransmit delay: 1000 us and Up to 15 retransmit trials
	nrf24_configRegister(SETUP_RETR,(0x04<<ARD)|(0x0F<<ARC));
 3d2:	6f e4       	ldi	r22, 0x4F	; 79
 3d4:	84 e0       	ldi	r24, 0x04	; 4
 3d6:	89 df       	rcall	.-238    	; 0x2ea <nrf24_configRegister>

	// Dynamic length configurations: No dynamic length
	nrf24_configRegister(DYNPD,(0<<DPL_P0)|(0<<DPL_P1)|(0<<DPL_P2)|(0<<DPL_P3)|(0<<DPL_P4)|(0<<DPL_P5));
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	8c e1       	ldi	r24, 0x1C	; 28
 3dc:	86 df       	rcall	.-244    	; 0x2ea <nrf24_configRegister>
	
	// Start listening
	nrf24_powerUpRx();
 3de:	96 df       	rcall	.-212    	; 0x30c <nrf24_powerUpRx>
	

//#if DEBUG
	printf("ustawienia rejestrów :\n");
 3e0:	8f ef       	ldi	r24, 0xFF	; 255
 3e2:	92 e0       	ldi	r25, 0x02	; 2
 3e4:	52 d0       	rcall	.+164    	; 0x48a <puts>
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	0f 90       	pop	r0
 3ee:	0f 90       	pop	r0
 3f0:	0f 90       	pop	r0
 3f2:	c0 e0       	ldi	r28, 0x00	; 0
 3f4:	d0 e0       	ldi	r29, 0x00	; 0
	//nrf24_readRegisters(0x00,&register_table ,29);
	for(unsigned char i=0;i<0x1d;i++){
		printf("register[%d] = 0x%x \n",i,nrf24_readSingleRegister(i));
 3f6:	06 e1       	ldi	r16, 0x16	; 22
 3f8:	13 e0       	ldi	r17, 0x03	; 3
 3fa:	8c 2f       	mov	r24, r28
 3fc:	a9 df       	rcall	.-174    	; 0x350 <nrf24_readSingleRegister>
 3fe:	1f 92       	push	r1
 400:	8f 93       	push	r24
 402:	df 93       	push	r29
 404:	cf 93       	push	r28
 406:	1f 93       	push	r17
 408:	0f 93       	push	r16
 40a:	29 d0       	rcall	.+82     	; 0x45e <printf>
 40c:	21 96       	adiw	r28, 0x01	; 1
	

//#if DEBUG
	printf("ustawienia rejestrów :\n");
	//nrf24_readRegisters(0x00,&register_table ,29);
	for(unsigned char i=0;i<0x1d;i++){
 40e:	0f 90       	pop	r0
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	cd 31       	cpi	r28, 0x1D	; 29
 41c:	d1 05       	cpc	r29, r1
 41e:	69 f7       	brne	.-38     	; 0x3fa <nrf24_config+0x8e>
	}
	
//#endif

	
}
 420:	df 91       	pop	r29
 422:	cf 91       	pop	r28
 424:	1f 91       	pop	r17
 426:	0f 91       	pop	r16
 428:	08 95       	ret

0000042a <spiInit>:



void spiInit(void)
{
	DDRSPI |= (1<<MOSI) | (1<<SCK) | (1<<SS);
 42a:	84 b1       	in	r24, 0x04	; 4
 42c:	87 60       	ori	r24, 0x07	; 7
 42e:	84 b9       	out	0x04, r24	; 4
	SPCR |= (1<<SPE) | (1<<MSTR) | (1<<SPR0);
 430:	8c b5       	in	r24, 0x2c	; 44
 432:	81 65       	ori	r24, 0x51	; 81
 434:	8c bd       	out	0x2c, r24	; 44
	CSN_HIGH;
 436:	28 9a       	sbi	0x05, 0	; 5
#if DEBUG
	printf("init SPI SPCR : %x\n", SPCR);
 438:	8c b5       	in	r24, 0x2c	; 44
 43a:	1f 92       	push	r1
 43c:	8f 93       	push	r24
 43e:	8b e5       	ldi	r24, 0x5B	; 91
 440:	93 e0       	ldi	r25, 0x03	; 3
 442:	9f 93       	push	r25
 444:	8f 93       	push	r24
 446:	0b d0       	rcall	.+22     	; 0x45e <printf>
 448:	0f 90       	pop	r0
 44a:	0f 90       	pop	r0
 44c:	0f 90       	pop	r0
 44e:	0f 90       	pop	r0
 450:	08 95       	ret

00000452 <spiTransmit>:
#endif
	//printf("spi init .. \n");
}
unsigned char spiTransmit(unsigned char spiData){
	SPDR = spiData;
 452:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
 454:	0d b4       	in	r0, 0x2d	; 45
 456:	07 fe       	sbrs	r0, 7
 458:	fd cf       	rjmp	.-6      	; 0x454 <spiTransmit+0x2>
	return SPDR;
 45a:	8e b5       	in	r24, 0x2e	; 46
}
 45c:	08 95       	ret

0000045e <printf>:
 45e:	cf 93       	push	r28
 460:	df 93       	push	r29
 462:	cd b7       	in	r28, 0x3d	; 61
 464:	de b7       	in	r29, 0x3e	; 62
 466:	fe 01       	movw	r30, r28
 468:	36 96       	adiw	r30, 0x06	; 6
 46a:	61 91       	ld	r22, Z+
 46c:	71 91       	ld	r23, Z+
 46e:	af 01       	movw	r20, r30
 470:	80 91 74 03 	lds	r24, 0x0374
 474:	90 91 75 03 	lds	r25, 0x0375
 478:	35 d0       	rcall	.+106    	; 0x4e4 <vfprintf>
 47a:	df 91       	pop	r29
 47c:	cf 91       	pop	r28
 47e:	08 95       	ret

00000480 <putchar>:
 480:	60 91 74 03 	lds	r22, 0x0374
 484:	70 91 75 03 	lds	r23, 0x0375
 488:	31 c2       	rjmp	.+1122   	; 0x8ec <fputc>

0000048a <puts>:
 48a:	0f 93       	push	r16
 48c:	1f 93       	push	r17
 48e:	cf 93       	push	r28
 490:	df 93       	push	r29
 492:	e0 91 74 03 	lds	r30, 0x0374
 496:	f0 91 75 03 	lds	r31, 0x0375
 49a:	23 81       	ldd	r18, Z+3	; 0x03
 49c:	21 ff       	sbrs	r18, 1
 49e:	1b c0       	rjmp	.+54     	; 0x4d6 <puts+0x4c>
 4a0:	ec 01       	movw	r28, r24
 4a2:	00 e0       	ldi	r16, 0x00	; 0
 4a4:	10 e0       	ldi	r17, 0x00	; 0
 4a6:	89 91       	ld	r24, Y+
 4a8:	60 91 74 03 	lds	r22, 0x0374
 4ac:	70 91 75 03 	lds	r23, 0x0375
 4b0:	db 01       	movw	r26, r22
 4b2:	18 96       	adiw	r26, 0x08	; 8
 4b4:	ed 91       	ld	r30, X+
 4b6:	fc 91       	ld	r31, X
 4b8:	19 97       	sbiw	r26, 0x09	; 9
 4ba:	88 23       	and	r24, r24
 4bc:	31 f0       	breq	.+12     	; 0x4ca <puts+0x40>
 4be:	19 95       	eicall
 4c0:	89 2b       	or	r24, r25
 4c2:	89 f3       	breq	.-30     	; 0x4a6 <puts+0x1c>
 4c4:	0f ef       	ldi	r16, 0xFF	; 255
 4c6:	1f ef       	ldi	r17, 0xFF	; 255
 4c8:	ee cf       	rjmp	.-36     	; 0x4a6 <puts+0x1c>
 4ca:	8a e0       	ldi	r24, 0x0A	; 10
 4cc:	19 95       	eicall
 4ce:	89 2b       	or	r24, r25
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <puts+0x4c>
 4d2:	c8 01       	movw	r24, r16
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <puts+0x50>
 4d6:	8f ef       	ldi	r24, 0xFF	; 255
 4d8:	9f ef       	ldi	r25, 0xFF	; 255
 4da:	df 91       	pop	r29
 4dc:	cf 91       	pop	r28
 4de:	1f 91       	pop	r17
 4e0:	0f 91       	pop	r16
 4e2:	08 95       	ret

000004e4 <vfprintf>:
 4e4:	2f 92       	push	r2
 4e6:	3f 92       	push	r3
 4e8:	4f 92       	push	r4
 4ea:	5f 92       	push	r5
 4ec:	6f 92       	push	r6
 4ee:	7f 92       	push	r7
 4f0:	8f 92       	push	r8
 4f2:	9f 92       	push	r9
 4f4:	af 92       	push	r10
 4f6:	bf 92       	push	r11
 4f8:	cf 92       	push	r12
 4fa:	df 92       	push	r13
 4fc:	ef 92       	push	r14
 4fe:	ff 92       	push	r15
 500:	0f 93       	push	r16
 502:	1f 93       	push	r17
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	cd b7       	in	r28, 0x3d	; 61
 50a:	de b7       	in	r29, 0x3e	; 62
 50c:	2c 97       	sbiw	r28, 0x0c	; 12
 50e:	0f b6       	in	r0, 0x3f	; 63
 510:	f8 94       	cli
 512:	de bf       	out	0x3e, r29	; 62
 514:	0f be       	out	0x3f, r0	; 63
 516:	cd bf       	out	0x3d, r28	; 61
 518:	7c 01       	movw	r14, r24
 51a:	6b 01       	movw	r12, r22
 51c:	8a 01       	movw	r16, r20
 51e:	fc 01       	movw	r30, r24
 520:	17 82       	std	Z+7, r1	; 0x07
 522:	16 82       	std	Z+6, r1	; 0x06
 524:	83 81       	ldd	r24, Z+3	; 0x03
 526:	81 ff       	sbrs	r24, 1
 528:	b0 c1       	rjmp	.+864    	; 0x88a <vfprintf+0x3a6>
 52a:	ce 01       	movw	r24, r28
 52c:	01 96       	adiw	r24, 0x01	; 1
 52e:	4c 01       	movw	r8, r24
 530:	f7 01       	movw	r30, r14
 532:	93 81       	ldd	r25, Z+3	; 0x03
 534:	f6 01       	movw	r30, r12
 536:	93 fd       	sbrc	r25, 3
 538:	85 91       	lpm	r24, Z+
 53a:	93 ff       	sbrs	r25, 3
 53c:	81 91       	ld	r24, Z+
 53e:	6f 01       	movw	r12, r30
 540:	88 23       	and	r24, r24
 542:	09 f4       	brne	.+2      	; 0x546 <vfprintf+0x62>
 544:	9e c1       	rjmp	.+828    	; 0x882 <vfprintf+0x39e>
 546:	85 32       	cpi	r24, 0x25	; 37
 548:	39 f4       	brne	.+14     	; 0x558 <vfprintf+0x74>
 54a:	93 fd       	sbrc	r25, 3
 54c:	85 91       	lpm	r24, Z+
 54e:	93 ff       	sbrs	r25, 3
 550:	81 91       	ld	r24, Z+
 552:	6f 01       	movw	r12, r30
 554:	85 32       	cpi	r24, 0x25	; 37
 556:	21 f4       	brne	.+8      	; 0x560 <vfprintf+0x7c>
 558:	b7 01       	movw	r22, r14
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	c7 d1       	rcall	.+910    	; 0x8ec <fputc>
 55e:	e8 cf       	rjmp	.-48     	; 0x530 <vfprintf+0x4c>
 560:	51 2c       	mov	r5, r1
 562:	31 2c       	mov	r3, r1
 564:	20 e0       	ldi	r18, 0x00	; 0
 566:	20 32       	cpi	r18, 0x20	; 32
 568:	a0 f4       	brcc	.+40     	; 0x592 <vfprintf+0xae>
 56a:	8b 32       	cpi	r24, 0x2B	; 43
 56c:	69 f0       	breq	.+26     	; 0x588 <vfprintf+0xa4>
 56e:	30 f4       	brcc	.+12     	; 0x57c <vfprintf+0x98>
 570:	80 32       	cpi	r24, 0x20	; 32
 572:	59 f0       	breq	.+22     	; 0x58a <vfprintf+0xa6>
 574:	83 32       	cpi	r24, 0x23	; 35
 576:	69 f4       	brne	.+26     	; 0x592 <vfprintf+0xae>
 578:	20 61       	ori	r18, 0x10	; 16
 57a:	2c c0       	rjmp	.+88     	; 0x5d4 <vfprintf+0xf0>
 57c:	8d 32       	cpi	r24, 0x2D	; 45
 57e:	39 f0       	breq	.+14     	; 0x58e <vfprintf+0xaa>
 580:	80 33       	cpi	r24, 0x30	; 48
 582:	39 f4       	brne	.+14     	; 0x592 <vfprintf+0xae>
 584:	21 60       	ori	r18, 0x01	; 1
 586:	26 c0       	rjmp	.+76     	; 0x5d4 <vfprintf+0xf0>
 588:	22 60       	ori	r18, 0x02	; 2
 58a:	24 60       	ori	r18, 0x04	; 4
 58c:	23 c0       	rjmp	.+70     	; 0x5d4 <vfprintf+0xf0>
 58e:	28 60       	ori	r18, 0x08	; 8
 590:	21 c0       	rjmp	.+66     	; 0x5d4 <vfprintf+0xf0>
 592:	27 fd       	sbrc	r18, 7
 594:	27 c0       	rjmp	.+78     	; 0x5e4 <vfprintf+0x100>
 596:	30 ed       	ldi	r19, 0xD0	; 208
 598:	38 0f       	add	r19, r24
 59a:	3a 30       	cpi	r19, 0x0A	; 10
 59c:	78 f4       	brcc	.+30     	; 0x5bc <vfprintf+0xd8>
 59e:	26 ff       	sbrs	r18, 6
 5a0:	06 c0       	rjmp	.+12     	; 0x5ae <vfprintf+0xca>
 5a2:	fa e0       	ldi	r31, 0x0A	; 10
 5a4:	5f 9e       	mul	r5, r31
 5a6:	30 0d       	add	r19, r0
 5a8:	11 24       	eor	r1, r1
 5aa:	53 2e       	mov	r5, r19
 5ac:	13 c0       	rjmp	.+38     	; 0x5d4 <vfprintf+0xf0>
 5ae:	8a e0       	ldi	r24, 0x0A	; 10
 5b0:	38 9e       	mul	r3, r24
 5b2:	30 0d       	add	r19, r0
 5b4:	11 24       	eor	r1, r1
 5b6:	33 2e       	mov	r3, r19
 5b8:	20 62       	ori	r18, 0x20	; 32
 5ba:	0c c0       	rjmp	.+24     	; 0x5d4 <vfprintf+0xf0>
 5bc:	8e 32       	cpi	r24, 0x2E	; 46
 5be:	21 f4       	brne	.+8      	; 0x5c8 <vfprintf+0xe4>
 5c0:	26 fd       	sbrc	r18, 6
 5c2:	5f c1       	rjmp	.+702    	; 0x882 <vfprintf+0x39e>
 5c4:	20 64       	ori	r18, 0x40	; 64
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <vfprintf+0xf0>
 5c8:	8c 36       	cpi	r24, 0x6C	; 108
 5ca:	11 f4       	brne	.+4      	; 0x5d0 <vfprintf+0xec>
 5cc:	20 68       	ori	r18, 0x80	; 128
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <vfprintf+0xf0>
 5d0:	88 36       	cpi	r24, 0x68	; 104
 5d2:	41 f4       	brne	.+16     	; 0x5e4 <vfprintf+0x100>
 5d4:	f6 01       	movw	r30, r12
 5d6:	93 fd       	sbrc	r25, 3
 5d8:	85 91       	lpm	r24, Z+
 5da:	93 ff       	sbrs	r25, 3
 5dc:	81 91       	ld	r24, Z+
 5de:	6f 01       	movw	r12, r30
 5e0:	81 11       	cpse	r24, r1
 5e2:	c1 cf       	rjmp	.-126    	; 0x566 <vfprintf+0x82>
 5e4:	98 2f       	mov	r25, r24
 5e6:	9f 7d       	andi	r25, 0xDF	; 223
 5e8:	95 54       	subi	r25, 0x45	; 69
 5ea:	93 30       	cpi	r25, 0x03	; 3
 5ec:	28 f4       	brcc	.+10     	; 0x5f8 <vfprintf+0x114>
 5ee:	0c 5f       	subi	r16, 0xFC	; 252
 5f0:	1f 4f       	sbci	r17, 0xFF	; 255
 5f2:	ff e3       	ldi	r31, 0x3F	; 63
 5f4:	f9 83       	std	Y+1, r31	; 0x01
 5f6:	0d c0       	rjmp	.+26     	; 0x612 <vfprintf+0x12e>
 5f8:	83 36       	cpi	r24, 0x63	; 99
 5fa:	31 f0       	breq	.+12     	; 0x608 <vfprintf+0x124>
 5fc:	83 37       	cpi	r24, 0x73	; 115
 5fe:	71 f0       	breq	.+28     	; 0x61c <vfprintf+0x138>
 600:	83 35       	cpi	r24, 0x53	; 83
 602:	09 f0       	breq	.+2      	; 0x606 <vfprintf+0x122>
 604:	57 c0       	rjmp	.+174    	; 0x6b4 <vfprintf+0x1d0>
 606:	21 c0       	rjmp	.+66     	; 0x64a <vfprintf+0x166>
 608:	f8 01       	movw	r30, r16
 60a:	80 81       	ld	r24, Z
 60c:	89 83       	std	Y+1, r24	; 0x01
 60e:	0e 5f       	subi	r16, 0xFE	; 254
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	44 24       	eor	r4, r4
 614:	43 94       	inc	r4
 616:	51 2c       	mov	r5, r1
 618:	54 01       	movw	r10, r8
 61a:	14 c0       	rjmp	.+40     	; 0x644 <vfprintf+0x160>
 61c:	38 01       	movw	r6, r16
 61e:	f2 e0       	ldi	r31, 0x02	; 2
 620:	6f 0e       	add	r6, r31
 622:	71 1c       	adc	r7, r1
 624:	f8 01       	movw	r30, r16
 626:	a0 80       	ld	r10, Z
 628:	b1 80       	ldd	r11, Z+1	; 0x01
 62a:	26 ff       	sbrs	r18, 6
 62c:	03 c0       	rjmp	.+6      	; 0x634 <vfprintf+0x150>
 62e:	65 2d       	mov	r22, r5
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	02 c0       	rjmp	.+4      	; 0x638 <vfprintf+0x154>
 634:	6f ef       	ldi	r22, 0xFF	; 255
 636:	7f ef       	ldi	r23, 0xFF	; 255
 638:	c5 01       	movw	r24, r10
 63a:	2c 87       	std	Y+12, r18	; 0x0c
 63c:	4c d1       	rcall	.+664    	; 0x8d6 <strnlen>
 63e:	2c 01       	movw	r4, r24
 640:	83 01       	movw	r16, r6
 642:	2c 85       	ldd	r18, Y+12	; 0x0c
 644:	2f 77       	andi	r18, 0x7F	; 127
 646:	22 2e       	mov	r2, r18
 648:	16 c0       	rjmp	.+44     	; 0x676 <vfprintf+0x192>
 64a:	38 01       	movw	r6, r16
 64c:	f2 e0       	ldi	r31, 0x02	; 2
 64e:	6f 0e       	add	r6, r31
 650:	71 1c       	adc	r7, r1
 652:	f8 01       	movw	r30, r16
 654:	a0 80       	ld	r10, Z
 656:	b1 80       	ldd	r11, Z+1	; 0x01
 658:	26 ff       	sbrs	r18, 6
 65a:	03 c0       	rjmp	.+6      	; 0x662 <vfprintf+0x17e>
 65c:	65 2d       	mov	r22, r5
 65e:	70 e0       	ldi	r23, 0x00	; 0
 660:	02 c0       	rjmp	.+4      	; 0x666 <vfprintf+0x182>
 662:	6f ef       	ldi	r22, 0xFF	; 255
 664:	7f ef       	ldi	r23, 0xFF	; 255
 666:	c5 01       	movw	r24, r10
 668:	2c 87       	std	Y+12, r18	; 0x0c
 66a:	2a d1       	rcall	.+596    	; 0x8c0 <strnlen_P>
 66c:	2c 01       	movw	r4, r24
 66e:	2c 85       	ldd	r18, Y+12	; 0x0c
 670:	20 68       	ori	r18, 0x80	; 128
 672:	22 2e       	mov	r2, r18
 674:	83 01       	movw	r16, r6
 676:	23 fc       	sbrc	r2, 3
 678:	19 c0       	rjmp	.+50     	; 0x6ac <vfprintf+0x1c8>
 67a:	83 2d       	mov	r24, r3
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	48 16       	cp	r4, r24
 680:	59 06       	cpc	r5, r25
 682:	a0 f4       	brcc	.+40     	; 0x6ac <vfprintf+0x1c8>
 684:	b7 01       	movw	r22, r14
 686:	80 e2       	ldi	r24, 0x20	; 32
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	30 d1       	rcall	.+608    	; 0x8ec <fputc>
 68c:	3a 94       	dec	r3
 68e:	f5 cf       	rjmp	.-22     	; 0x67a <vfprintf+0x196>
 690:	f5 01       	movw	r30, r10
 692:	27 fc       	sbrc	r2, 7
 694:	85 91       	lpm	r24, Z+
 696:	27 fe       	sbrs	r2, 7
 698:	81 91       	ld	r24, Z+
 69a:	5f 01       	movw	r10, r30
 69c:	b7 01       	movw	r22, r14
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	25 d1       	rcall	.+586    	; 0x8ec <fputc>
 6a2:	31 10       	cpse	r3, r1
 6a4:	3a 94       	dec	r3
 6a6:	f1 e0       	ldi	r31, 0x01	; 1
 6a8:	4f 1a       	sub	r4, r31
 6aa:	51 08       	sbc	r5, r1
 6ac:	41 14       	cp	r4, r1
 6ae:	51 04       	cpc	r5, r1
 6b0:	79 f7       	brne	.-34     	; 0x690 <vfprintf+0x1ac>
 6b2:	de c0       	rjmp	.+444    	; 0x870 <vfprintf+0x38c>
 6b4:	84 36       	cpi	r24, 0x64	; 100
 6b6:	11 f0       	breq	.+4      	; 0x6bc <vfprintf+0x1d8>
 6b8:	89 36       	cpi	r24, 0x69	; 105
 6ba:	31 f5       	brne	.+76     	; 0x708 <vfprintf+0x224>
 6bc:	f8 01       	movw	r30, r16
 6be:	27 ff       	sbrs	r18, 7
 6c0:	07 c0       	rjmp	.+14     	; 0x6d0 <vfprintf+0x1ec>
 6c2:	60 81       	ld	r22, Z
 6c4:	71 81       	ldd	r23, Z+1	; 0x01
 6c6:	82 81       	ldd	r24, Z+2	; 0x02
 6c8:	93 81       	ldd	r25, Z+3	; 0x03
 6ca:	0c 5f       	subi	r16, 0xFC	; 252
 6cc:	1f 4f       	sbci	r17, 0xFF	; 255
 6ce:	08 c0       	rjmp	.+16     	; 0x6e0 <vfprintf+0x1fc>
 6d0:	60 81       	ld	r22, Z
 6d2:	71 81       	ldd	r23, Z+1	; 0x01
 6d4:	88 27       	eor	r24, r24
 6d6:	77 fd       	sbrc	r23, 7
 6d8:	80 95       	com	r24
 6da:	98 2f       	mov	r25, r24
 6dc:	0e 5f       	subi	r16, 0xFE	; 254
 6de:	1f 4f       	sbci	r17, 0xFF	; 255
 6e0:	2f 76       	andi	r18, 0x6F	; 111
 6e2:	b2 2e       	mov	r11, r18
 6e4:	97 ff       	sbrs	r25, 7
 6e6:	09 c0       	rjmp	.+18     	; 0x6fa <vfprintf+0x216>
 6e8:	90 95       	com	r25
 6ea:	80 95       	com	r24
 6ec:	70 95       	com	r23
 6ee:	61 95       	neg	r22
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	20 68       	ori	r18, 0x80	; 128
 6f8:	b2 2e       	mov	r11, r18
 6fa:	2a e0       	ldi	r18, 0x0A	; 10
 6fc:	30 e0       	ldi	r19, 0x00	; 0
 6fe:	a4 01       	movw	r20, r8
 700:	27 d1       	rcall	.+590    	; 0x950 <__ultoa_invert>
 702:	a8 2e       	mov	r10, r24
 704:	a8 18       	sub	r10, r8
 706:	43 c0       	rjmp	.+134    	; 0x78e <vfprintf+0x2aa>
 708:	85 37       	cpi	r24, 0x75	; 117
 70a:	29 f4       	brne	.+10     	; 0x716 <vfprintf+0x232>
 70c:	2f 7e       	andi	r18, 0xEF	; 239
 70e:	b2 2e       	mov	r11, r18
 710:	2a e0       	ldi	r18, 0x0A	; 10
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	25 c0       	rjmp	.+74     	; 0x760 <vfprintf+0x27c>
 716:	f2 2f       	mov	r31, r18
 718:	f9 7f       	andi	r31, 0xF9	; 249
 71a:	bf 2e       	mov	r11, r31
 71c:	8f 36       	cpi	r24, 0x6F	; 111
 71e:	c1 f0       	breq	.+48     	; 0x750 <vfprintf+0x26c>
 720:	18 f4       	brcc	.+6      	; 0x728 <vfprintf+0x244>
 722:	88 35       	cpi	r24, 0x58	; 88
 724:	79 f0       	breq	.+30     	; 0x744 <vfprintf+0x260>
 726:	ad c0       	rjmp	.+346    	; 0x882 <vfprintf+0x39e>
 728:	80 37       	cpi	r24, 0x70	; 112
 72a:	19 f0       	breq	.+6      	; 0x732 <vfprintf+0x24e>
 72c:	88 37       	cpi	r24, 0x78	; 120
 72e:	21 f0       	breq	.+8      	; 0x738 <vfprintf+0x254>
 730:	a8 c0       	rjmp	.+336    	; 0x882 <vfprintf+0x39e>
 732:	2f 2f       	mov	r18, r31
 734:	20 61       	ori	r18, 0x10	; 16
 736:	b2 2e       	mov	r11, r18
 738:	b4 fe       	sbrs	r11, 4
 73a:	0d c0       	rjmp	.+26     	; 0x756 <vfprintf+0x272>
 73c:	8b 2d       	mov	r24, r11
 73e:	84 60       	ori	r24, 0x04	; 4
 740:	b8 2e       	mov	r11, r24
 742:	09 c0       	rjmp	.+18     	; 0x756 <vfprintf+0x272>
 744:	24 ff       	sbrs	r18, 4
 746:	0a c0       	rjmp	.+20     	; 0x75c <vfprintf+0x278>
 748:	9f 2f       	mov	r25, r31
 74a:	96 60       	ori	r25, 0x06	; 6
 74c:	b9 2e       	mov	r11, r25
 74e:	06 c0       	rjmp	.+12     	; 0x75c <vfprintf+0x278>
 750:	28 e0       	ldi	r18, 0x08	; 8
 752:	30 e0       	ldi	r19, 0x00	; 0
 754:	05 c0       	rjmp	.+10     	; 0x760 <vfprintf+0x27c>
 756:	20 e1       	ldi	r18, 0x10	; 16
 758:	30 e0       	ldi	r19, 0x00	; 0
 75a:	02 c0       	rjmp	.+4      	; 0x760 <vfprintf+0x27c>
 75c:	20 e1       	ldi	r18, 0x10	; 16
 75e:	32 e0       	ldi	r19, 0x02	; 2
 760:	f8 01       	movw	r30, r16
 762:	b7 fe       	sbrs	r11, 7
 764:	07 c0       	rjmp	.+14     	; 0x774 <vfprintf+0x290>
 766:	60 81       	ld	r22, Z
 768:	71 81       	ldd	r23, Z+1	; 0x01
 76a:	82 81       	ldd	r24, Z+2	; 0x02
 76c:	93 81       	ldd	r25, Z+3	; 0x03
 76e:	0c 5f       	subi	r16, 0xFC	; 252
 770:	1f 4f       	sbci	r17, 0xFF	; 255
 772:	06 c0       	rjmp	.+12     	; 0x780 <vfprintf+0x29c>
 774:	60 81       	ld	r22, Z
 776:	71 81       	ldd	r23, Z+1	; 0x01
 778:	80 e0       	ldi	r24, 0x00	; 0
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	0e 5f       	subi	r16, 0xFE	; 254
 77e:	1f 4f       	sbci	r17, 0xFF	; 255
 780:	a4 01       	movw	r20, r8
 782:	e6 d0       	rcall	.+460    	; 0x950 <__ultoa_invert>
 784:	a8 2e       	mov	r10, r24
 786:	a8 18       	sub	r10, r8
 788:	fb 2d       	mov	r31, r11
 78a:	ff 77       	andi	r31, 0x7F	; 127
 78c:	bf 2e       	mov	r11, r31
 78e:	b6 fe       	sbrs	r11, 6
 790:	0b c0       	rjmp	.+22     	; 0x7a8 <vfprintf+0x2c4>
 792:	2b 2d       	mov	r18, r11
 794:	2e 7f       	andi	r18, 0xFE	; 254
 796:	a5 14       	cp	r10, r5
 798:	50 f4       	brcc	.+20     	; 0x7ae <vfprintf+0x2ca>
 79a:	b4 fe       	sbrs	r11, 4
 79c:	0a c0       	rjmp	.+20     	; 0x7b2 <vfprintf+0x2ce>
 79e:	b2 fc       	sbrc	r11, 2
 7a0:	08 c0       	rjmp	.+16     	; 0x7b2 <vfprintf+0x2ce>
 7a2:	2b 2d       	mov	r18, r11
 7a4:	2e 7e       	andi	r18, 0xEE	; 238
 7a6:	05 c0       	rjmp	.+10     	; 0x7b2 <vfprintf+0x2ce>
 7a8:	7a 2c       	mov	r7, r10
 7aa:	2b 2d       	mov	r18, r11
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <vfprintf+0x2d0>
 7ae:	7a 2c       	mov	r7, r10
 7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <vfprintf+0x2d0>
 7b2:	75 2c       	mov	r7, r5
 7b4:	24 ff       	sbrs	r18, 4
 7b6:	0d c0       	rjmp	.+26     	; 0x7d2 <vfprintf+0x2ee>
 7b8:	fe 01       	movw	r30, r28
 7ba:	ea 0d       	add	r30, r10
 7bc:	f1 1d       	adc	r31, r1
 7be:	80 81       	ld	r24, Z
 7c0:	80 33       	cpi	r24, 0x30	; 48
 7c2:	11 f4       	brne	.+4      	; 0x7c8 <vfprintf+0x2e4>
 7c4:	29 7e       	andi	r18, 0xE9	; 233
 7c6:	09 c0       	rjmp	.+18     	; 0x7da <vfprintf+0x2f6>
 7c8:	22 ff       	sbrs	r18, 2
 7ca:	06 c0       	rjmp	.+12     	; 0x7d8 <vfprintf+0x2f4>
 7cc:	73 94       	inc	r7
 7ce:	73 94       	inc	r7
 7d0:	04 c0       	rjmp	.+8      	; 0x7da <vfprintf+0x2f6>
 7d2:	82 2f       	mov	r24, r18
 7d4:	86 78       	andi	r24, 0x86	; 134
 7d6:	09 f0       	breq	.+2      	; 0x7da <vfprintf+0x2f6>
 7d8:	73 94       	inc	r7
 7da:	23 fd       	sbrc	r18, 3
 7dc:	12 c0       	rjmp	.+36     	; 0x802 <vfprintf+0x31e>
 7de:	20 ff       	sbrs	r18, 0
 7e0:	06 c0       	rjmp	.+12     	; 0x7ee <vfprintf+0x30a>
 7e2:	5a 2c       	mov	r5, r10
 7e4:	73 14       	cp	r7, r3
 7e6:	18 f4       	brcc	.+6      	; 0x7ee <vfprintf+0x30a>
 7e8:	53 0c       	add	r5, r3
 7ea:	57 18       	sub	r5, r7
 7ec:	73 2c       	mov	r7, r3
 7ee:	73 14       	cp	r7, r3
 7f0:	60 f4       	brcc	.+24     	; 0x80a <vfprintf+0x326>
 7f2:	b7 01       	movw	r22, r14
 7f4:	80 e2       	ldi	r24, 0x20	; 32
 7f6:	90 e0       	ldi	r25, 0x00	; 0
 7f8:	2c 87       	std	Y+12, r18	; 0x0c
 7fa:	78 d0       	rcall	.+240    	; 0x8ec <fputc>
 7fc:	73 94       	inc	r7
 7fe:	2c 85       	ldd	r18, Y+12	; 0x0c
 800:	f6 cf       	rjmp	.-20     	; 0x7ee <vfprintf+0x30a>
 802:	73 14       	cp	r7, r3
 804:	10 f4       	brcc	.+4      	; 0x80a <vfprintf+0x326>
 806:	37 18       	sub	r3, r7
 808:	01 c0       	rjmp	.+2      	; 0x80c <vfprintf+0x328>
 80a:	31 2c       	mov	r3, r1
 80c:	24 ff       	sbrs	r18, 4
 80e:	11 c0       	rjmp	.+34     	; 0x832 <vfprintf+0x34e>
 810:	b7 01       	movw	r22, r14
 812:	80 e3       	ldi	r24, 0x30	; 48
 814:	90 e0       	ldi	r25, 0x00	; 0
 816:	2c 87       	std	Y+12, r18	; 0x0c
 818:	69 d0       	rcall	.+210    	; 0x8ec <fputc>
 81a:	2c 85       	ldd	r18, Y+12	; 0x0c
 81c:	22 ff       	sbrs	r18, 2
 81e:	16 c0       	rjmp	.+44     	; 0x84c <vfprintf+0x368>
 820:	21 ff       	sbrs	r18, 1
 822:	03 c0       	rjmp	.+6      	; 0x82a <vfprintf+0x346>
 824:	88 e5       	ldi	r24, 0x58	; 88
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x34a>
 82a:	88 e7       	ldi	r24, 0x78	; 120
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	b7 01       	movw	r22, r14
 830:	0c c0       	rjmp	.+24     	; 0x84a <vfprintf+0x366>
 832:	82 2f       	mov	r24, r18
 834:	86 78       	andi	r24, 0x86	; 134
 836:	51 f0       	breq	.+20     	; 0x84c <vfprintf+0x368>
 838:	21 fd       	sbrc	r18, 1
 83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x35c>
 83c:	80 e2       	ldi	r24, 0x20	; 32
 83e:	01 c0       	rjmp	.+2      	; 0x842 <vfprintf+0x35e>
 840:	8b e2       	ldi	r24, 0x2B	; 43
 842:	27 fd       	sbrc	r18, 7
 844:	8d e2       	ldi	r24, 0x2D	; 45
 846:	b7 01       	movw	r22, r14
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	50 d0       	rcall	.+160    	; 0x8ec <fputc>
 84c:	a5 14       	cp	r10, r5
 84e:	30 f4       	brcc	.+12     	; 0x85c <vfprintf+0x378>
 850:	b7 01       	movw	r22, r14
 852:	80 e3       	ldi	r24, 0x30	; 48
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	4a d0       	rcall	.+148    	; 0x8ec <fputc>
 858:	5a 94       	dec	r5
 85a:	f8 cf       	rjmp	.-16     	; 0x84c <vfprintf+0x368>
 85c:	aa 94       	dec	r10
 85e:	f4 01       	movw	r30, r8
 860:	ea 0d       	add	r30, r10
 862:	f1 1d       	adc	r31, r1
 864:	80 81       	ld	r24, Z
 866:	b7 01       	movw	r22, r14
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	40 d0       	rcall	.+128    	; 0x8ec <fputc>
 86c:	a1 10       	cpse	r10, r1
 86e:	f6 cf       	rjmp	.-20     	; 0x85c <vfprintf+0x378>
 870:	33 20       	and	r3, r3
 872:	09 f4       	brne	.+2      	; 0x876 <vfprintf+0x392>
 874:	5d ce       	rjmp	.-838    	; 0x530 <vfprintf+0x4c>
 876:	b7 01       	movw	r22, r14
 878:	80 e2       	ldi	r24, 0x20	; 32
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	37 d0       	rcall	.+110    	; 0x8ec <fputc>
 87e:	3a 94       	dec	r3
 880:	f7 cf       	rjmp	.-18     	; 0x870 <vfprintf+0x38c>
 882:	f7 01       	movw	r30, r14
 884:	86 81       	ldd	r24, Z+6	; 0x06
 886:	97 81       	ldd	r25, Z+7	; 0x07
 888:	02 c0       	rjmp	.+4      	; 0x88e <vfprintf+0x3aa>
 88a:	8f ef       	ldi	r24, 0xFF	; 255
 88c:	9f ef       	ldi	r25, 0xFF	; 255
 88e:	2c 96       	adiw	r28, 0x0c	; 12
 890:	0f b6       	in	r0, 0x3f	; 63
 892:	f8 94       	cli
 894:	de bf       	out	0x3e, r29	; 62
 896:	0f be       	out	0x3f, r0	; 63
 898:	cd bf       	out	0x3d, r28	; 61
 89a:	df 91       	pop	r29
 89c:	cf 91       	pop	r28
 89e:	1f 91       	pop	r17
 8a0:	0f 91       	pop	r16
 8a2:	ff 90       	pop	r15
 8a4:	ef 90       	pop	r14
 8a6:	df 90       	pop	r13
 8a8:	cf 90       	pop	r12
 8aa:	bf 90       	pop	r11
 8ac:	af 90       	pop	r10
 8ae:	9f 90       	pop	r9
 8b0:	8f 90       	pop	r8
 8b2:	7f 90       	pop	r7
 8b4:	6f 90       	pop	r6
 8b6:	5f 90       	pop	r5
 8b8:	4f 90       	pop	r4
 8ba:	3f 90       	pop	r3
 8bc:	2f 90       	pop	r2
 8be:	08 95       	ret

000008c0 <strnlen_P>:
 8c0:	fc 01       	movw	r30, r24
 8c2:	05 90       	lpm	r0, Z+
 8c4:	61 50       	subi	r22, 0x01	; 1
 8c6:	70 40       	sbci	r23, 0x00	; 0
 8c8:	01 10       	cpse	r0, r1
 8ca:	d8 f7       	brcc	.-10     	; 0x8c2 <strnlen_P+0x2>
 8cc:	80 95       	com	r24
 8ce:	90 95       	com	r25
 8d0:	8e 0f       	add	r24, r30
 8d2:	9f 1f       	adc	r25, r31
 8d4:	08 95       	ret

000008d6 <strnlen>:
 8d6:	fc 01       	movw	r30, r24
 8d8:	61 50       	subi	r22, 0x01	; 1
 8da:	70 40       	sbci	r23, 0x00	; 0
 8dc:	01 90       	ld	r0, Z+
 8de:	01 10       	cpse	r0, r1
 8e0:	d8 f7       	brcc	.-10     	; 0x8d8 <strnlen+0x2>
 8e2:	80 95       	com	r24
 8e4:	90 95       	com	r25
 8e6:	8e 0f       	add	r24, r30
 8e8:	9f 1f       	adc	r25, r31
 8ea:	08 95       	ret

000008ec <fputc>:
 8ec:	0f 93       	push	r16
 8ee:	1f 93       	push	r17
 8f0:	cf 93       	push	r28
 8f2:	df 93       	push	r29
 8f4:	18 2f       	mov	r17, r24
 8f6:	09 2f       	mov	r16, r25
 8f8:	eb 01       	movw	r28, r22
 8fa:	8b 81       	ldd	r24, Y+3	; 0x03
 8fc:	81 fd       	sbrc	r24, 1
 8fe:	03 c0       	rjmp	.+6      	; 0x906 <fputc+0x1a>
 900:	8f ef       	ldi	r24, 0xFF	; 255
 902:	9f ef       	ldi	r25, 0xFF	; 255
 904:	20 c0       	rjmp	.+64     	; 0x946 <fputc+0x5a>
 906:	82 ff       	sbrs	r24, 2
 908:	10 c0       	rjmp	.+32     	; 0x92a <fputc+0x3e>
 90a:	4e 81       	ldd	r20, Y+6	; 0x06
 90c:	5f 81       	ldd	r21, Y+7	; 0x07
 90e:	2c 81       	ldd	r18, Y+4	; 0x04
 910:	3d 81       	ldd	r19, Y+5	; 0x05
 912:	42 17       	cp	r20, r18
 914:	53 07       	cpc	r21, r19
 916:	7c f4       	brge	.+30     	; 0x936 <fputc+0x4a>
 918:	e8 81       	ld	r30, Y
 91a:	f9 81       	ldd	r31, Y+1	; 0x01
 91c:	9f 01       	movw	r18, r30
 91e:	2f 5f       	subi	r18, 0xFF	; 255
 920:	3f 4f       	sbci	r19, 0xFF	; 255
 922:	39 83       	std	Y+1, r19	; 0x01
 924:	28 83       	st	Y, r18
 926:	10 83       	st	Z, r17
 928:	06 c0       	rjmp	.+12     	; 0x936 <fputc+0x4a>
 92a:	e8 85       	ldd	r30, Y+8	; 0x08
 92c:	f9 85       	ldd	r31, Y+9	; 0x09
 92e:	81 2f       	mov	r24, r17
 930:	19 95       	eicall
 932:	89 2b       	or	r24, r25
 934:	29 f7       	brne	.-54     	; 0x900 <fputc+0x14>
 936:	2e 81       	ldd	r18, Y+6	; 0x06
 938:	3f 81       	ldd	r19, Y+7	; 0x07
 93a:	2f 5f       	subi	r18, 0xFF	; 255
 93c:	3f 4f       	sbci	r19, 0xFF	; 255
 93e:	3f 83       	std	Y+7, r19	; 0x07
 940:	2e 83       	std	Y+6, r18	; 0x06
 942:	81 2f       	mov	r24, r17
 944:	90 2f       	mov	r25, r16
 946:	df 91       	pop	r29
 948:	cf 91       	pop	r28
 94a:	1f 91       	pop	r17
 94c:	0f 91       	pop	r16
 94e:	08 95       	ret

00000950 <__ultoa_invert>:
 950:	fa 01       	movw	r30, r20
 952:	aa 27       	eor	r26, r26
 954:	28 30       	cpi	r18, 0x08	; 8
 956:	51 f1       	breq	.+84     	; 0x9ac <__ultoa_invert+0x5c>
 958:	20 31       	cpi	r18, 0x10	; 16
 95a:	81 f1       	breq	.+96     	; 0x9bc <__ultoa_invert+0x6c>
 95c:	e8 94       	clt
 95e:	6f 93       	push	r22
 960:	6e 7f       	andi	r22, 0xFE	; 254
 962:	6e 5f       	subi	r22, 0xFE	; 254
 964:	7f 4f       	sbci	r23, 0xFF	; 255
 966:	8f 4f       	sbci	r24, 0xFF	; 255
 968:	9f 4f       	sbci	r25, 0xFF	; 255
 96a:	af 4f       	sbci	r26, 0xFF	; 255
 96c:	b1 e0       	ldi	r27, 0x01	; 1
 96e:	3e d0       	rcall	.+124    	; 0x9ec <__ultoa_invert+0x9c>
 970:	b4 e0       	ldi	r27, 0x04	; 4
 972:	3c d0       	rcall	.+120    	; 0x9ec <__ultoa_invert+0x9c>
 974:	67 0f       	add	r22, r23
 976:	78 1f       	adc	r23, r24
 978:	89 1f       	adc	r24, r25
 97a:	9a 1f       	adc	r25, r26
 97c:	a1 1d       	adc	r26, r1
 97e:	68 0f       	add	r22, r24
 980:	79 1f       	adc	r23, r25
 982:	8a 1f       	adc	r24, r26
 984:	91 1d       	adc	r25, r1
 986:	a1 1d       	adc	r26, r1
 988:	6a 0f       	add	r22, r26
 98a:	71 1d       	adc	r23, r1
 98c:	81 1d       	adc	r24, r1
 98e:	91 1d       	adc	r25, r1
 990:	a1 1d       	adc	r26, r1
 992:	20 d0       	rcall	.+64     	; 0x9d4 <__ultoa_invert+0x84>
 994:	09 f4       	brne	.+2      	; 0x998 <__ultoa_invert+0x48>
 996:	68 94       	set
 998:	3f 91       	pop	r19
 99a:	2a e0       	ldi	r18, 0x0A	; 10
 99c:	26 9f       	mul	r18, r22
 99e:	11 24       	eor	r1, r1
 9a0:	30 19       	sub	r19, r0
 9a2:	30 5d       	subi	r19, 0xD0	; 208
 9a4:	31 93       	st	Z+, r19
 9a6:	de f6       	brtc	.-74     	; 0x95e <__ultoa_invert+0xe>
 9a8:	cf 01       	movw	r24, r30
 9aa:	08 95       	ret
 9ac:	46 2f       	mov	r20, r22
 9ae:	47 70       	andi	r20, 0x07	; 7
 9b0:	40 5d       	subi	r20, 0xD0	; 208
 9b2:	41 93       	st	Z+, r20
 9b4:	b3 e0       	ldi	r27, 0x03	; 3
 9b6:	0f d0       	rcall	.+30     	; 0x9d6 <__ultoa_invert+0x86>
 9b8:	c9 f7       	brne	.-14     	; 0x9ac <__ultoa_invert+0x5c>
 9ba:	f6 cf       	rjmp	.-20     	; 0x9a8 <__ultoa_invert+0x58>
 9bc:	46 2f       	mov	r20, r22
 9be:	4f 70       	andi	r20, 0x0F	; 15
 9c0:	40 5d       	subi	r20, 0xD0	; 208
 9c2:	4a 33       	cpi	r20, 0x3A	; 58
 9c4:	18 f0       	brcs	.+6      	; 0x9cc <__ultoa_invert+0x7c>
 9c6:	49 5d       	subi	r20, 0xD9	; 217
 9c8:	31 fd       	sbrc	r19, 1
 9ca:	40 52       	subi	r20, 0x20	; 32
 9cc:	41 93       	st	Z+, r20
 9ce:	02 d0       	rcall	.+4      	; 0x9d4 <__ultoa_invert+0x84>
 9d0:	a9 f7       	brne	.-22     	; 0x9bc <__ultoa_invert+0x6c>
 9d2:	ea cf       	rjmp	.-44     	; 0x9a8 <__ultoa_invert+0x58>
 9d4:	b4 e0       	ldi	r27, 0x04	; 4
 9d6:	a6 95       	lsr	r26
 9d8:	97 95       	ror	r25
 9da:	87 95       	ror	r24
 9dc:	77 95       	ror	r23
 9de:	67 95       	ror	r22
 9e0:	ba 95       	dec	r27
 9e2:	c9 f7       	brne	.-14     	; 0x9d6 <__ultoa_invert+0x86>
 9e4:	00 97       	sbiw	r24, 0x00	; 0
 9e6:	61 05       	cpc	r22, r1
 9e8:	71 05       	cpc	r23, r1
 9ea:	08 95       	ret
 9ec:	9b 01       	movw	r18, r22
 9ee:	ac 01       	movw	r20, r24
 9f0:	0a 2e       	mov	r0, r26
 9f2:	06 94       	lsr	r0
 9f4:	57 95       	ror	r21
 9f6:	47 95       	ror	r20
 9f8:	37 95       	ror	r19
 9fa:	27 95       	ror	r18
 9fc:	ba 95       	dec	r27
 9fe:	c9 f7       	brne	.-14     	; 0x9f2 <__ultoa_invert+0xa2>
 a00:	62 0f       	add	r22, r18
 a02:	73 1f       	adc	r23, r19
 a04:	84 1f       	adc	r24, r20
 a06:	95 1f       	adc	r25, r21
 a08:	a0 1d       	adc	r26, r0
 a0a:	08 95       	ret

00000a0c <_exit>:
 a0c:	f8 94       	cli

00000a0e <__stop_program>:
 a0e:	ff cf       	rjmp	.-2      	; 0xa0e <__stop_program>
